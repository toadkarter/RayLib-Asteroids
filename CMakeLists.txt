cmake_minimum_required(VERSION 3.11) # FetchContent is available in 3.11+
project(asteroids)

# Generate compile_commands.json
set(CMAKE_EXPORT_COMPILE_COMMANDS ON)

# Dependencies
set(RAYLIB_VERSION 5.5)
find_package(raylib ${RAYLIB_VERSION} QUIET) # QUIET or REQUIRED
if (NOT raylib_FOUND) # If there's none, fetch and build raylib
  include(FetchContent)
  FetchContent_Declare(
          raylib
          GIT_REPOSITORY "https://github.com/raysan5/raylib.git"
          GIT_TAG "master"
          GIT_PROGRESS TRUE
  )
  FetchContent_GetProperties(raylib)
  if (NOT raylib_POPULATED) # Have we downloaded raylib yet?
    set(FETCHCONTENT_QUIET NO)
    FetchContent_Populate(raylib)
    set(BUILD_EXAMPLES OFF CACHE BOOL "" FORCE) # don't build the supplied examples
    add_subdirectory(${raylib_SOURCE_DIR} ${raylib_BINARY_DIR})
  endif()
endif()

# Our Project

add_executable(${PROJECT_NAME} src/main.c
        src/asteroid.h
        src/asteroid.c
        src/raygui.h
        src/raygui.c
        src/debug.c
        src/debug.h
        src/constants.h
        src/game_asteroids.c
        src/game_asteroids.h)
#set(raylib_VERBOSE 1)
target_link_libraries(${PROJECT_NAME} -lm raylib)

# Web Configurations
#if (${PLATFORM} STREQUAL "Web")
#    # Tell Emscripten to build an example.html file.
#    set_target_properties(${PROJECT_NAME} PROPERTIES SUFFIX ".html")
#endif()

# Checks if OSX and links appropriate frameworks (Only required on MacOS)
if (APPLE)
    target_link_libraries(${PROJECT_NAME} "-framework IOKit")
    target_link_libraries(${PROJECT_NAME} "-framework Cocoa")
    target_link_libraries(${PROJECT_NAME} "-framework OpenGL")
endif()
